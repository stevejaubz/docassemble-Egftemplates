---
metadata:
  title: |
    Gorrissen Federspiel
  logo: |
    <img src="/packagestatic/docassemble.gftemplates/logo_white.png" style="max-height:1.85714286em;"/>
  back button label: |
    Back
---
initial: True
code: |
  set_language(user_language)
---
mandatory: True
scan for variables: False
id: interview order
code: |
  # debug_tools
  category
  # Check the category to see if there are any top-level entries
  # or if there are entries in one of the subcategory
  if len(drive_contents.in_category(category)) < 1 and len(tools.in_category(category)) < 1:
    soft_exit
  if len(drive_contents.in_category_not_subcategory(category)) < 1:
    subcategory_id
    subcategory_document_choice
  else:  
    main_category_choice
  set_parts(subtitle=document_title)
  if len(sp_documents):
    if sp_documents[0].fields.get('Primary Language') in ['en','da']:
      user_language = sp_documents[0].fields.get('Primary Language')
      set_language(user_language)
  if fill_in_vars == 'all':
    #show_all_fields
    set_all_fields_blank
  use_default_values = fill_in_vars == 'defaults'
  da_documents
  ending_screen
---
code: |
  if url_args.get('lang'):
    user_language = url_args.get('lang')
  else:
    user_language= 'en'
---
event: change_language
code: |
  #set_save_status('overwrite')
  if 'lang' in action_arguments():
    user_language = action_argument('lang')
    set_language(user_language)
---
mandatory: True
code: |
  set_live_help_status(availability='observeonly', mode='help', partner_roles=['advocate'])
---
modules:
  # - .gf_graph
  - .gf_yaml
  # - .scan_for_vars
---
objects:
  - o365: GFYamlLoader.using(path="data/sources/")
  - drive_contents: GFYamlFileList.using(auto_gather=False,gathered=True)
  - tools: ToolList
---
include:
  - docassemble.gfgeneralquestions:data/questions/standard_include.yml
  #- standard_include_playground.yml
---
features:
  css: 
    - docassemble.gftemplates:gf.css
  javascript: fix_back_button.js    
  question back button: True
---
code: |
  document_title = comma_list([document.primaryTitle() for document in sp_documents])
---
code: |
  tools = get_tools(o365,site,intrinsicName='tools')
---
code: |
  user_is_admin = user_has_privilege(['admin', 'developer'])
---
code: |
  user_details = get_user_info() 
  # Ensure that we have obtained the user's email via Azure authentication
  user_email = user_details.get('email').lower() if user_details.get('account_type') == 'azure' else None
---
question: |
  ${tools}
subquestion: |
  % for tool in tools:
  [${tool}](${interview_url(i=tool.interview_url)})
  % endfor
field: debug_tools
---
code: |
  site = None
  # "gorrissenfederspiel.sharepoint.com:/sites/Docassemble"
  
  # don't filter categories if the user is an administrator
  if user_is_admin:
    categories = get_categories(o365)
    subcategories = get_subcategories(o365)
  else:
    categories = get_categories(o365, check_access=True, user=user_email)
    subcategories = get_subcategories(o365, check_access=True, user=user_email)
  #, site)
  
  o365.get_files_in_folder( drive="Templates", folder=None, lazylist=drive_contents, get_list_metadata=True, enabled_only=True, docx_only=True)
---
question: |
  [${category_name(category, categories=categories, language=user_language)} ](${url_ask(['category',{'undefine': ['subcategory_choice','subcategory_id']}])}) :chevron-right: Choose a subcategory below
buttons:
  code: |
    get_subcategory_buttons(categories, category, language=user_language)
field: subcategory_id
---
question: |
  Choose a category below
subquestion: |
  % if user_language == 'en':  
  English | [Dansk](${url_action('change_language', lang='da')})
  % else:
  [English](${url_action('change_language', lang='en')}) | Dansk
  % endif
field: category
back button: False
buttons:
  code: |
    get_category_buttons(categories,language=user_language)
---
question: |
  [${category_name(category, categories=categories, language=user_language)}](${url_ask(['category',{'undefine': ['subcategory_choice','subcategory_id']}])}) [:chevron-right: ${subcategory_name(subcategory_id, subcategories=subcategories, language=user_language)}](${url_action('subcategory_id')}) :chevron-right: Choose a document
subquestion: |
  % if len(tools.in_subcategory(subcategory_id)):
  #### Standalone Tools
  % for tool in tools.in_subcategory(subcategory_id):
  * ${tool.show(language=user_language)}
  % endfor
  #### Documents
  % endif
fields:
  - Document: sp_documents
    datatype: object_checkboxes
    choices: |
       drive_contents.in_subcategory(subcategory_id,check_access=(not user_is_admin), user=user_email)
    none of the above: False
    object labeler: |
      lambda y: str(y) + y.description_new_line()
  - note: |
      #### Customize download options
    show if:
      code: |
        len(drive_contents.in_subcategory(subcategory_id,check_access=(not user_is_admin), user=user_email))     
  - How would you like your document(s)?: fill_in_vars
    datatype: radio
    choices:
      - Download immediately no questions asked: all
      - Use defaults and ask other questions: defaults
      - Ask all relevant questions: normal
    default: normal
    show if:
      code: |
        len(drive_contents.in_subcategory(subcategory_id,check_access=(not user_is_admin), user=user_email))
  - note: |
      ### There are no templates in this subcategory yet
      Click "Back" to choose a different category.
    show if:
      code: |
        not len(drive_contents.in_subcategory(subcategory_id,check_access=(not user_is_admin), user=user_email))
        
continue button field: subcategory_document_choice
---
event: subcategory_choice
code: |
  subcategory_id = action_argument('subcategory_id')
  subcategory_document_choice
---
question: |
  Choose a document
subquestion: |
  % if len(tools.in_category(category)):
  #### Tools
  % for tool in tools.in_category(category):
  * ${tool.show()}
  % endfor
  % endif
fields:
  - Document: sp_documents
    datatype: object_checkboxes
    choices: |
      drive_contents.in_category(category, check_access=(not user_is_admin), user=user_email) 
    none of the above: False
    object labeler: |
      lambda y: str(y) + "\n" + y.description_new_line()
  - note: |
      ### Questionaire settings:
  - How would you like your document(s)?: fill_in_vars
    datatype: radio
    choices:
      - Download immediately no questions asked: all
      - Use defaults and ask other questions: defaults
      - Ask all relevant questions: normal
    default: normal
continue button field: main_category_choice
---
question: |
  ${all_fields}
field: show_all_fields
---
code: |
  temp_fields = set()
  for dafile in da_documents:
    temp_fields.update(dafile.get_docx_variables())
  all_fields = temp_fields
---
code: |
  for field in all_fields:
    exec(field +'= GFEmpty()')
  set_all_fields_blank = True
---
code: |
  # use new method to refresh download link before attempting download
  da_documents = DAList('da_documents', object_type = DAObject, elements=[sp_document.as_dafile(o365=o365) for sp_document in sp_documents])
---
id: download
event: ending_screen
question: |
  Your files are ready
subquestion: |
  % for da_document in da_documents:
  * [${ da_document.title }.docx](${ da_document.attachment.docx.url_for() })
  % endfor
  % if len(da_documents) > 1:
  
  * [Download all: documents.zip](${ zip_file([da_document.attachment.docx for da_document in da_documents], filename="documents.zip").url_for() })
  % endif
  
  ### Preview:
  
  % for da_document in da_documents:
  
  ${ da_document.attachment.pdf }
  % endfor
buttons:
  - Erase and start over: restart
  - New session: new_session
---
attachment:
  name: ${da_documents[i].filename}
  filename: ${da_documents[i].filename.rsplit('.', 1)[0]}
  variable name: da_documents[i].attachment
  docx template file: 
    code: |
      da_documents[i]
---
event: soft_exit
question: |
  There aren't any forms in this category yet
subquestion: |
  Click back to try a different category.
help: |
  ${ categories }

  ${ drive_contents }
  
  % for item in drive_contents:
  ${ item.fields }
  
  % endfor
back button: True